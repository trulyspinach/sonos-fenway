#!/bin/sh

mount -t proc proc proc

/sbin/ifconfig lo 127.0.0.1 up

# Create the ramdisk
mount -t ramfs ramfs /ramdisk
mkdir -m 777 /ramdisk/var
mkdir -m 777 /ramdisk/var/run
mkdir -m 777 /ramdisk/var/log
mkdir -m 777 /ramdisk/tmp
mkdir -m 777 /ramdisk/optlog
mkdir -m 777 /ramdisk/smb

# Mount the JFFS2 partition
mount -t jffs2 -o noatime /dev/nandjffs /jffs
mount -t devpts none /dev/pts

/etc/init.d/Srandom

if [ -f /jffs/Configure ]; then
sh /jffs/Configure

else
# Load the CIFS file system module
#/sbin/insmod /modules/cifs.o

# Load the audiodev module
if [ -f /jffs/audiodev.ko ]; then
/sbin/insmod /jffs/audiodev.ko
else
/sbin/insmod /modules/audiodev.ko
fi

# Configure the kernel to allow up to 256K socket buffers
echo 262143 > /proc/sys/net/core/rmem_max
echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

/bin/mdputil -B

# Determine what driver (802.11G vs 802.11N) to load
# This was what sh4 ZPs use, but upgrade wants HWFEATURES=0 for Wembley
# wifiType=`mdputil | grep ^HWFEATURES | awk '{if (match($0, "ATH_AR5416_WIFI")) print "N"; else print "G";}'`
wifiType=N

# Load wireless driver
if [ -f /jffs/adf.ko ]; then
/sbin/insmod /jffs/adf.ko
else
/sbin/insmod /wifi/$wifiType/adf.ko
fi

if [ -f /jffs/asf.ko ]; then
/sbin/insmod /jffs/asf.ko
else
/sbin/insmod /wifi/$wifiType/asf.ko
fi

if [ -f /jffs/ath_hal.ko ]; then
/sbin/insmod /jffs/ath_hal.ko
else
/sbin/insmod /wifi/$wifiType/ath_hal.ko
fi

if [ -f /jffs/ath_driver.ko ]; then
/sbin/insmod /jffs/ath_driver.ko
else
/sbin/insmod /wifi/$wifiType/ath_driver.ko
fi

# Set up bridge
if [ -f /jffs/bridge.ko ]; then
/sbin/insmod /jffs/bridge.ko
else
/sbin/insmod /wifi/bridge.ko
fi
/usr/sbin/brctl addbr br0
/usr/sbin/brctl sethello br0 1.0
/usr/sbin/brctl setfd br0 4.0
/usr/sbin/brctl setmaxage br0 6.0

# Set ethernet MAC address based on Wi-Fi MAC address
/usr/sbin/setmac

# Add ethernet interface to bridge
/sbin/ifconfig eth0 0.0.0.0
/usr/sbin/brctl addif br0 eth0

# Compute device UUID
UUIDA=`/sbin/ifconfig eth0 | grep HWaddr | awk '{print $5}' | sed -e 's/://g'`
UUIDP=`grep ^Port /opt/conf/anacapa.conf | awk '{print $2}'`
UUID='RINCON_'$UUIDA'0'$UUIDP

# Bring up wireless interface
/wifi/$wifiType/athconfig setmode ath0 INFRA

PRIMARYUUID=""

if [ -f /jffs/netsettings.txt ]; then
    WEPKEY=`grep ^WEPKey /jffs/netsettings.txt | cut -c 10- | cut -f1 -d']'`
    HHID=`grep ^HouseholdID /jffs/netsettings.txt | cut -c 15- | cut -f1 -d']'`
    CHANNEL=`grep ^Channel /jffs/netsettings.txt | cut -c 11- | cut -f1 -d']'`
    /wifi/$wifiType/athconfig setwepkey ath0 $WEPKEY
    /wifi/$wifiType/athconfig setssid ath0 $HHID
    /wifi/$wifiType/athconfig setchannel ath0 $CHANNEL

    PRIMARYUUID=`grep ^PrimaryUUID /jffs/netsettings.txt | cut -c 15- | cut -f1 -d']'`
    if [ "${PRIMARYUUID}z" != "z" ]; then
	/wifi/$wifiType/athconfig satenable ath0 1
    fi

    FIRSTZP=`grep ^FirstZP /jffs/netsettings.txt | cut -c 11- | cut -f1 -d']'`
    if [ "$FIRSTZP" = "1" ]; then
        /usr/sbin/brctl setbridgeprio br0 32768
    else
        /usr/sbin/brctl setbridgeprio br0 36864
    fi
fi

/sbin/ifconfig ath0 0.0.0.0 

if [ "${PRIMARYUUID}z" != "z" ]; then
    /wifi/$wifiType/athconfig setprimaryuuid ath0 $PRIMARYUUID 50
fi

# Start up bridge interface
/sbin/ifconfig br0 0.0.0.0
/sbin/route add 255.255.255.255 br0
/sbin/route add -net 224.0.0.0 netmask 240.0.0.0 br0

MINVER=`mdputil | grep ^SUBMODEL | awk '{if (match($0, "SUBMODEL=2")) print "18 0"; else print "";}'`

# Bring up netstartd and hostapd
/wifi/netstartd /jffs $UUID $MINVER
/wifi/hostapd

if [ -f /jffs/netsettings.txt ]; then
    # FirstZP might have been changed by netstartd
    FIRSTZP2=`grep ^FirstZP /jffs/netsettings.txt | cut -c 11- | cut -f1 -d']'`
    if [ "$FIRSTZP2" != "$FIRSTZP" ]; then
        # redo what we did above but using FIRSTZP2
        if [ "$FIRSTZP2" = "1" ]; then
            /usr/sbin/brctl setbridgeprio br0 32768
        else
            /usr/sbin/brctl setbridgeprio br0 36864
        fi
    fi
fi

# Get an IP address (either from DHCP or auto-assigned)
/sbin/udhcpc -s /etc/dhcp.script -i br0 -w ath0 -h "SonosZP" -d access.bestbuy.com

# Execute custom configuration script
if [ -f /jffs/system/Configure.dev ]; then
    sh /jffs/system/Configure.dev
fi

if [ -f /jffs/hosts ]; then
    touch /jffs/hosts
else
    cp /etc/hosts.orig /jffs/hosts
fi

# Start SMB-related daemons
/opt/bin/smbscand &

fi
